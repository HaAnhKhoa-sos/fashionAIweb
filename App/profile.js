document.addEventListener('DOMContentLoaded', function () {
    const isLoggedIn = localStorage.getItem('isLoggedIn');
    if (!isLoggedIn || isLoggedIn !== 'true') {
        alert('B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ truy c·∫≠p trang n√†y!');
        window.location.href = 'index.html';
        return;
    }

    const userPhone = localStorage.getItem('userPhone') || '';
    if (!userPhone) {
        alert('Kh√¥ng t√¨m th·∫•y th√¥ng tin ƒëƒÉng nh·∫≠p!');
        localStorage.removeItem('isLoggedIn');
        window.location.href = 'index.html';
        return;
    }

    let userData = null;
    const savedUserData = localStorage.getItem(userPhone);
    if (savedUserData) {
        userData = JSON.parse(savedUserData);
    }

    const userName = userData ? userData.name : (localStorage.getItem('userName') || 'Kh√°ch h√†ng');
    const userAddress = userData ? userData.address : (localStorage.getItem('userAddress') || '');
    let balance = userData ? (userData.balance || 0) : parseFloat(localStorage.getItem('accountBalance')) || 0;
    let profileImageSrc = userData ? (userData.image || 'https://via.placeholder.com/100x100?text=Avatar') : 'https://via.placeholder.com/100x100?text=Avatar'; 

    document.getElementById('profileName').value = userName;
    document.getElementById('profilePhone').value = userPhone;
    document.getElementById('profileAddress').value = userAddress;
    document.getElementById('accountBalance').textContent = balance.toLocaleString('vi-VN');
    document.getElementById('profileImage').src = profileImageSrc; // Hi·ªÉn th·ªã h√¨nh ·∫£nh khi load

    // X·ª≠ l√Ω thay ƒë·ªïi h√¨nh ·∫£nh
    document.getElementById('changeImageBtn').addEventListener('click', () => {
        document.getElementById('imageUpload').click(); // K√≠ch ho·∫°t input file ·∫©n
    });

    document.getElementById('imageUpload').addEventListener('change', (event) => {
        const file = event.target.files[0];
        if (file) {
            if (!file.type.startsWith('image/')) {
                alert('‚ùå Vui l√≤ng ch·ªçn file h√¨nh ·∫£nh h·ª£p l·ªá (PNG, JPG, etc.)!');
                return;
            }
            if (file.size > 5 * 1024 * 1024) { // Gi·ªõi h·∫°n 5MB
                alert('‚ùå K√≠ch th∆∞·ªõc file qu√° l·ªõn (t·ªëi ƒëa 5MB)!');
                return;
            }
            const reader = new FileReader();
            reader.onload = function (e) {
                profileImageSrc = e.target.result; // Base64 string
                document.getElementById('profileImage').src = profileImageSrc; // Hi·ªÉn th·ªã ngay
            };
            reader.readAsDataURL(file);
        }
    });

    document.getElementById('depositBtn').addEventListener('click', () => {
        const amountStr = prompt('üí∞ Nh·∫≠p s·ªë ti·ªÅn (VND): Nh·∫≠p d∆∞∆°ng ƒë·ªÉ n·∫°p, √¢m ƒë·ªÉ tr·ª´ (ch·ªâ cho test):', '100000');
        const amount = parseInt(amountStr) || 0;
        if (amount !== 0 && /^\-?\d+$/.test(amountStr)) {  // Cho ph√©p s·ªë √¢m
            if (amount < 0 && Math.abs(amount) > balance) {
                alert('‚ùå S·ªë ti·ªÅn tr·ª´ v∆∞·ª£t qu√° s·ªë d∆∞!');
                return;
            }
            balance += amount;  // N·∫øu √¢m, s·∫Ω tr·ª´

            localStorage.setItem('accountBalance', balance);
            if (userData) {
                userData.balance = balance;
                localStorage.setItem(userPhone, JSON.stringify(userData));
            }

            document.getElementById('accountBalance').textContent = balance.toLocaleString('vi-VN');
            const action = amount > 0 ? 'n·∫°p' : 'tr·ª´';
            alert(`‚úÖ ${action.charAt(0).toUpperCase() + action.slice(1)} th√†nh c√¥ng ${Math.abs(amount).toLocaleString('vi-VN')} VND! S·ªë d∆∞ c√≤n: ${balance.toLocaleString('vi-VN')} VND.`);
        } else {
            alert('‚ùå S·ªë ti·ªÅn kh√¥ng h·ª£p l·ªá (ph·∫£i l√† s·ªë nguy√™n, d∆∞∆°ng ƒë·ªÉ n·∫°p, √¢m ƒë·ªÉ tr·ª´).');
        }
    });

    document.getElementById('saveBtn').addEventListener('click', () => {
        const nameInput = document.getElementById('profileName').value.trim();
        const phoneInput = document.getElementById('profilePhone').value.trim();
        const address = document.getElementById('profileAddress').value.trim();

        if (!nameInput || !phoneInput || phoneInput.length < 10 || !/^0[1-9]\d{8,9}$/.test(phoneInput)) {
            alert('‚ùå Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß v√† ƒë√∫ng ƒë·ªãnh d·∫°ng (t√™n, phone h·ª£p l·ªá)!');
            return;
        }

        const currentPhone = userPhone;
        if (phoneInput !== currentPhone) {
            alert('‚ö†Ô∏è S·ªë ƒëi·ªán tho·∫°i kh√¥ng th·ªÉ thay ƒë·ªïi. Vui l√≤ng li√™n h·ªá h·ªó tr·ª£ n·∫øu c·∫ßn c·∫≠p nh·∫≠t.');
            return;
        }

        localStorage.setItem('userName', nameInput);
        localStorage.setItem('userPhone', phoneInput);
        localStorage.setItem('userAddress', address);

        if (userData) {
            userData.name = nameInput;
            userData.address = address;
            userData.balance = balance;
            userData.image = profileImageSrc; // L∆∞u h√¨nh ·∫£nh
            localStorage.setItem(currentPhone, JSON.stringify(userData));
        } else {
            userData = {
                name: nameInput,
                phone: phoneInput,
                address: address,
                balance: balance,
                image: profileImageSrc // L∆∞u h√¨nh ·∫£nh
            };
            localStorage.setItem(currentPhone, JSON.stringify(userData));
        }

        alert('üíæ Th√¥ng tin c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c l∆∞u th√†nh c√¥ng!');
    });

    document.getElementById('logoutBtn').addEventListener('click', () => {
        if (confirm('B·∫°n c√≥ ch·∫Øc mu·ªën ƒëƒÉng xu·∫•t?')) {
            localStorage.removeItem('isLoggedIn');
            localStorage.removeItem('userName');
            localStorage.removeItem('userPhone');
            localStorage.removeItem('userAddress');
            localStorage.removeItem('accountBalance');
            if (userData && userPhone) {
                localStorage.removeItem(userPhone);
            }
            window.location.href = 'index.html';
        }
    });

    // H√†m render orders cho profile (t∆∞∆°ng t·ª± tracking, nh∆∞ng ch·ªâ hi·ªÉn th·ªã cho user hi·ªán t·∫°i)
    function renderProfileOrders() {
        const ordersHistoryEl = document.getElementById('ordersHistory'); // Th√™m <div id="ordersHistory"></div> v√†o profile.html
        if (!ordersHistoryEl) return;

        let orders = [];
        try {
            orders = JSON.parse(localStorage.getItem('orders')) || [];
        } catch (error) {
            console.error('L·ªói load orders:', error);
            orders = [];
        }

        const filteredOrders = orders.filter(order => order.userPhone === userPhone);
        
        ordersHistoryEl.innerHTML = '<h3>L·ªãch s·ª≠ ƒë∆°n h√†ng</h3>';
        if (filteredOrders.length === 0) {
            ordersHistoryEl.innerHTML += '<p>Ch∆∞a c√≥ ƒë∆°n h√†ng n√†o.</p>';
            return;
        }

        filteredOrders.forEach(order => {
            const orderDiv = document.createElement('div');
            orderDiv.className = 'order-item';
            orderDiv.innerHTML = `
            <h4>M√£ ƒë∆°n h√†ng: ${order.orderCode}</h4>
            <p>Ng√†y ƒë·∫∑t: ${new Date(order.timestamp).toLocaleDateString('vi-VN')}</p>
            <p>ƒê·ªãa ch·ªâ giao: ${order.address || 'Ch∆∞a c·∫≠p nh·∫≠t'}</p>
            <p>S·∫£n ph·∫©m: ${order.items.map(item => `${item.name} (x${item.quantity || 1})`).join(', ')}</p>
            <p>T·ªïng ti·ªÅn: ${order.total.toLocaleString('vi-VN')} VND (Ph√≠ ship: ${order.shippingFee.toLocaleString('vi-VN')} VND)</p>
            <p>Ph∆∞∆°ng th·ª©c giao: ${order.shipping === 'express' ? 'H·ªèa t·ªëc' : 'B√¨nh th∆∞·ªùng'}</p>
            <div class="status-bar">
                <span class="status ${order.status === 'ƒê√£ thanh to√°n' ? 'completed' : 'pending'}">${order.status}</span>
            </div>
        `;
            ordersHistoryEl.appendChild(orderDiv);
        });
    }

    // G·ªçi h√†m render khi load trang
    renderProfileOrders();
});